<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:String x:Key="/Default/CodeEditing/Unity/AdditionalFileLayout/Pattern/@EntryValue">&lt;Patterns xmlns="urn:schemas-jetbrains-com:member-reordering-patterns"&gt;

    &lt;TypePattern DisplayName="Non-reorderable types"&gt;
        &lt;TypePattern.Match&gt;
            &lt;Or&gt;
                &lt;And&gt;
                    &lt;Kind Is="Interface"/&gt;
                    &lt;Or&gt;
                        &lt;HasAttribute Name="System.Runtime.InteropServices.InterfaceTypeAttribute"/&gt;
                        &lt;HasAttribute Name="System.Runtime.InteropServices.ComImport"/&gt;
                    &lt;/Or&gt;
                &lt;/And&gt;
                &lt;Kind Is="Struct"/&gt;
                &lt;HasAttribute Name="JetBrains.Annotations.NoReorderAttribute"/&gt;
                &lt;HasAttribute Name="JetBrains.Annotations.NoReorder"/&gt;
            &lt;/Or&gt;
        &lt;/TypePattern.Match&gt;
    &lt;/TypePattern&gt;

    &lt;TypePattern DisplayName="My Default Pattern" RemoveRegions="All"&gt;

        &lt;Region Name="Public Variables"&gt;
            &lt;Entry&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Or&gt;
                            &lt;Kind Is="Constant"/&gt;
                            &lt;Kind Is="Property"/&gt;
                            &lt;Kind Is="Indexer"/&gt;
                            &lt;Kind Is="Field"/&gt;
                            &lt;Kind Is="Enum"/&gt;
                        &lt;/Or&gt;
                        &lt;Access Is="Public"/&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Kind&gt;
                        &lt;Kind.Order&gt;&lt;/Kind.Order&gt;
                    &lt;/Kind&gt;
                    &lt;Static/&gt;
                    &lt;Type/&gt;
                    &lt;Name/&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;

        &lt;Region Name="Protected Variables"&gt;
            &lt;Entry&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Or&gt;
                            &lt;Kind Is="Constant"/&gt;
                            &lt;Kind Is="Property"/&gt;
                            &lt;Kind Is="Indexer"/&gt;
                            &lt;Kind Is="Field"/&gt;
                            &lt;Kind Is="Enum"/&gt;
                        &lt;/Or&gt;
                        &lt;Access Is="Protected"/&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Kind&gt;
                        &lt;Kind.Order&gt;&lt;/Kind.Order&gt;
                    &lt;/Kind&gt;
                    &lt;Static/&gt;
                    &lt;Type/&gt;
                    &lt;Name/&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;

        &lt;Region Name="Private Variables"&gt;
            &lt;Entry&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Or&gt;
                            &lt;Kind Is="Constant"/&gt;
                            &lt;Kind Is="Field"/&gt;
                            &lt;Kind Is="Class"/&gt;
                            &lt;Kind Is="Property"/&gt;
                            &lt;Kind Is="Indexer"/&gt;
                            &lt;Kind Is="Enum"/&gt;
                        &lt;/Or&gt;
                        &lt;Not&gt;
                            &lt;Access Is="Public"/&gt;
                        &lt;/Not&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Kind&gt;
                        &lt;Kind.Order&gt;&lt;/Kind.Order&gt;
                    &lt;/Kind&gt;
                    &lt;Static/&gt;
                    &lt;Type/&gt;
                    &lt;Name/&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;

        &lt;Region Name="Constructor "&gt;
            &lt;Entry&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Constructor"/&gt;
                        &lt;Not&gt;
                            &lt;Name Is="^On"/&gt;
                        &lt;/Not&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Name/&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;

        &lt;Region Name="Unity events"&gt;
            &lt;Entry&gt;
                &lt;Entry.Match&gt;
                    &lt;Or&gt;
                        &lt;Name Is="^Start$"/&gt;
                    &lt;/Or&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Name/&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;

        &lt;Region Name="Setup/Teardown Methods"&gt;
            &lt;Entry DisplayName="Setup/Teardown Methods"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method" /&gt;
                        &lt;Or&gt;
                            &lt;HasAttribute Name="NUnit.Framework.SetUpAttribute" /&gt;
                            &lt;HasAttribute Name="NUnit.Framework.TearDownAttribute" /&gt;
                        &lt;/Or&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;

        &lt;Region Name="Test Methods"&gt;
            &lt;Entry DisplayName="Test Methods"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method" /&gt;
                        &lt;Or&gt;
                            &lt;HasAttribute Name="NUnit.Framework.TestAttribute" /&gt;
                        &lt;/Or&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;

        &lt;Region Name="Events"&gt;
            &lt;Entry&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method"/&gt;
                        &lt;Name Is="^On.*"/&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Name/&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;

        &lt;Region Name="Public Methods"&gt;
            &lt;Entry&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method"/&gt;
                        &lt;Not&gt;
                            &lt;Name Is="^On"/&gt;
                        &lt;/Not&gt;
                        &lt;Access Is="Public"/&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Name/&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;

        &lt;Region Name="Protected Methods"&gt;
            &lt;Entry&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method"/&gt;
                        &lt;Not&gt;
                            &lt;Name Is="^On"/&gt;
                        &lt;/Not&gt;
                        &lt;Access Is="Protected"/&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Name/&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;

        &lt;Region Name="Private Methods"&gt;
            &lt;Entry&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method"/&gt;
                        &lt;Not&gt;
                            &lt;Name Is="^On"/&gt;
                        &lt;/Not&gt;
                        &lt;Access Is="Private"/&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Name/&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;



        &lt;Region Name="Delegates"&gt;
            &lt;Entry&gt;
                &lt;Entry.Match&gt;
                    &lt;Kind Is="Delegate"/&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access/&gt;
                    &lt;Name/&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;

        &lt;Region Name="Nested Types"&gt;
            &lt;Entry&gt;
                &lt;Entry.Match&gt;
                    &lt;Kind Is="Type"/&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access/&gt;
                    &lt;Name/&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;

    &lt;/TypePattern&gt;
&lt;/Patterns&gt;</s:String>
	<s:Boolean x:Key="/Default/CodeInspection/Roslyn/LegacySeveritiesMigrated/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/RecentlyUsedProfile/@EntryValue">Built-in: Full Cleanup</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/SilentCleanupProfile/@EntryValue">Built-in: Reformat Code</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_AFTER_TYPECAST_PARENTHESES/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_WITHIN_SINGLE_LINE_ARRAY_INITIALIZER_BRACES/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CSharpFileLayoutPatterns/Pattern/@EntryValue">&lt;Patterns xmlns="urn:schemas-jetbrains-com:member-reordering-patterns"&gt;

    &lt;TypePattern DisplayName="Non-reorderable types"&gt;
        &lt;TypePattern.Match&gt;
            &lt;Or&gt;
                &lt;And&gt;
                    &lt;Kind Is="Interface"/&gt;
                    &lt;Or&gt;
                        &lt;HasAttribute Name="System.Runtime.InteropServices.InterfaceTypeAttribute"/&gt;
                        &lt;HasAttribute Name="System.Runtime.InteropServices.ComImport"/&gt;
                    &lt;/Or&gt;
                &lt;/And&gt;
                &lt;Kind Is="Struct"/&gt;
                &lt;HasAttribute Name="JetBrains.Annotations.NoReorderAttribute"/&gt;
                &lt;HasAttribute Name="JetBrains.Annotations.NoReorder"/&gt;
            &lt;/Or&gt;
        &lt;/TypePattern.Match&gt;
    &lt;/TypePattern&gt;

    &lt;TypePattern DisplayName="My Default Pattern" RemoveRegions="All"&gt;

        &lt;Region Name="Public Variables"&gt;
            &lt;Entry&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Or&gt;
                            &lt;Kind Is="Constant"/&gt;
                            &lt;Kind Is="Property"/&gt;
                            &lt;Kind Is="Indexer"/&gt;
                            &lt;Kind Is="Field"/&gt;
                            &lt;Kind Is="Enum"/&gt;
                        &lt;/Or&gt;
                        &lt;Access Is="Public"/&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Kind&gt;
                        &lt;Kind.Order&gt;&lt;/Kind.Order&gt;
                    &lt;/Kind&gt;
                    &lt;Static/&gt;
                    &lt;Type/&gt;
                    &lt;Name/&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;

        &lt;Region Name="Protected Variables"&gt;
            &lt;Entry&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Or&gt;
                            &lt;Kind Is="Constant"/&gt;
                            &lt;Kind Is="Property"/&gt;
                            &lt;Kind Is="Indexer"/&gt;
                            &lt;Kind Is="Field"/&gt;
                            &lt;Kind Is="Enum"/&gt;
                        &lt;/Or&gt;
                        &lt;Access Is="Protected"/&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Kind&gt;
                        &lt;Kind.Order&gt;&lt;/Kind.Order&gt;
                    &lt;/Kind&gt;
                    &lt;Static/&gt;
                    &lt;Type/&gt;
                    &lt;Name/&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;

        &lt;Region Name="Private Variables"&gt;
            &lt;Entry&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Or&gt;
                            &lt;Kind Is="Constant"/&gt;
                            &lt;Kind Is="Field"/&gt;
                            &lt;Kind Is="Class"/&gt;
                            &lt;Kind Is="Property"/&gt;
                            &lt;Kind Is="Indexer"/&gt;
                            &lt;Kind Is="Enum"/&gt;
                        &lt;/Or&gt;
                        &lt;Not&gt;
                            &lt;Access Is="Public"/&gt;
                        &lt;/Not&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Kind&gt;
                        &lt;Kind.Order&gt;&lt;/Kind.Order&gt;
                    &lt;/Kind&gt;
                    &lt;Static/&gt;
                    &lt;Type/&gt;
                    &lt;Name/&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;

        &lt;Region Name="Constructor "&gt;
            &lt;Entry&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Constructor"/&gt;
                        &lt;Not&gt;
                            &lt;Name Is="^On"/&gt;
                        &lt;/Not&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Name/&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;

        &lt;Region Name="Unity events"&gt;
            &lt;Entry&gt;
                &lt;Entry.Match&gt;
                    &lt;Or&gt;
                        &lt;Name Is="^Start$"/&gt;
                    &lt;/Or&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Name/&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;

        &lt;Region Name="Setup/Teardown Methods"&gt;
            &lt;Entry DisplayName="Setup/Teardown Methods"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method" /&gt;
                        &lt;Or&gt;
                            &lt;HasAttribute Name="NUnit.Framework.SetUpAttribute" /&gt;
                            &lt;HasAttribute Name="NUnit.Framework.TearDownAttribute" /&gt;
                        &lt;/Or&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;

        &lt;Region Name="Test Methods"&gt;
            &lt;Entry DisplayName="Test Methods"&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method" /&gt;
                        &lt;Or&gt;
                            &lt;HasAttribute Name="NUnit.Framework.TestAttribute" /&gt;
                        &lt;/Or&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;

        &lt;Region Name="Events"&gt;
            &lt;Entry&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method"/&gt;
                        &lt;Name Is="^On.*"/&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Name/&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;

        &lt;Region Name="Public Methods"&gt;
            &lt;Entry&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method"/&gt;
                        &lt;Not&gt;
                            &lt;Name Is="^On"/&gt;
                        &lt;/Not&gt;
                        &lt;Access Is="Public"/&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Name/&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;

        &lt;Region Name="Protected Methods"&gt;
            &lt;Entry&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method"/&gt;
                        &lt;Not&gt;
                            &lt;Name Is="^On"/&gt;
                        &lt;/Not&gt;
                        &lt;Access Is="Protected"/&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Name/&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;

        &lt;Region Name="Private Methods"&gt;
            &lt;Entry&gt;
                &lt;Entry.Match&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method"/&gt;
                        &lt;Not&gt;
                            &lt;Name Is="^On"/&gt;
                        &lt;/Not&gt;
                        &lt;Access Is="Private"/&gt;
                    &lt;/And&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Name/&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;



        &lt;Region Name="Delegates"&gt;
            &lt;Entry&gt;
                &lt;Entry.Match&gt;
                    &lt;Kind Is="Delegate"/&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access/&gt;
                    &lt;Name/&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;

        &lt;Region Name="Nested Types"&gt;
            &lt;Entry&gt;
                &lt;Entry.Match&gt;
                    &lt;Kind Is="Type"/&gt;
                &lt;/Entry.Match&gt;
                &lt;Entry.SortBy&gt;
                    &lt;Access/&gt;
                    &lt;Name/&gt;
                &lt;/Entry.SortBy&gt;
            &lt;/Entry&gt;
        &lt;/Region&gt;

    &lt;/TypePattern&gt;
&lt;/Patterns&gt;</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/Generate/=Implementations/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/Generate/=Implementations/Options/=Mutable/@EntryIndexedValue">False</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/Naming/CSharpAutoNaming/IsNotificationDisabled/@EntryValue">True</s:Boolean></wpf:ResourceDictionary>